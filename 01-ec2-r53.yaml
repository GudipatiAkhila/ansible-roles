- name: create ec2 and r53
  hosts: local
  connection: local
  vars:
    ami_id: ami-09c813fb71547fc4f
    sg_id: sg-056da0d2f0f74920c
    zone_id: "Z06910713O62417EOBAHU"
    domain_name: "daws.86s.website"
    # we can pass these instances through command lines using -e  -- every time we can't come and create here we can pass aruguments in the mobbaxterm by usng this - ansible-playbook -i inventory.ini -e "instances=['catalog','user','cart']"
    instances: 
    - mongodb
    - redis
    - mysql
    - rabbitmq
    - shipping
    # - payment
    # - frontend
    
  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t3.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        Name: "{{ item }}"
    loop: "{{ instances }}"
    register: ec2_output

  - name: print the ec2_output
    ansible.builtin.debug:
      msg: "{{ ec2_output }}" 

  # - name: print public_ip
  #   ansible.builtin.debug: "{{ item.instances[0].public_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  # - name: print private_ip
  #   ansible.builtin.debug: "{{ item.instances[0].private_ip_address }}"  
  #   loop: "{{ ec2_output.results }}"
  # - name: create route53 record
  #   amazon.aws.route53:
  #     state: present
  #     zone: "{{ domain_name }}"
  #     record: "{{ item.item }}.{{ domain_name }}"
  #     type: A
  #     ttl: 1
  #     value: "{{ item.instances[0].private_ip_address }}"
  #     overwrite: true
  #   loop: "{{ ec2_output.results }}"

  - name: create route53 record
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ item.item }}.{{ domain_name }}" # mongodb.daws86s.website
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      overwrite: true
    loop: "{{ ec2_output.results }}"
  # we are creating one record with public only for frontend
  - name: create route53 record for frontend
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ domain_name }}" # daws86s.website
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      overwrite: true
    when: item.item == "frontend"
    loop: "{{ ec2_output.results }}"